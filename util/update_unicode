#!/bin/sh -eu

# This should not be in shell, should move to go, but for now, be fast to write

URLBASE='http://www.unicode.org/Public/UCD/latest/ucd/'
UNICODE_DATA=''
UNICODE_BLOCKS=''

use_unpublished() {
	URLBASE='http://www.unicode.org/Public/10.0.0/ucd/'
	UNICODE_DATA='UnicodeData-10.0.0d5.txt'
	UNICODE_BLOCKS='Blocks-10.0.0d1.txt'
}

update() {
	local input="$1"
	local output="$2"
	local origin_override="$3"
	local datavarname="$4"
	local datalenvarname="$5"

	local datafile="unicode/${input%%:*}"
	local generated="unicode/${output}"

	if [ ".${SKIP_FETCH:-}" = "." ]; then
		if [ ".${origin_override}" != "." ]; then
			echo >&2 "WARNING: using override file for ${datafile}: ${origin_override}"
			cp -v -- "$origin_override" "$datafile"
		else
			curl -L -o "$datafile" "${URLBASE}${input#*:}"
		fi
	fi

	git add -- "$datafile"

	ApproxCount=$(wc -l < $datafile | xargs)

	rm -vf "$generated"

	exec 3>&1
	exec > "$generated"

	echo "// Code generated by util/update_unicode; DO NOT EDIT."
	echo ""
	echo "package unicode;"
	echo
	echo "var ${datavarname} = []byte(\`"

	sed 's/`/`+"`"+`/g' < "$datafile"

	echo '`)'
	echo
	echo "const ${datalenvarname} = $ApproxCount"
	echo
	echo "// EOF"

	exec >&3
	exec 3>&-

	go fmt "$generated"
	git add -- "$generated"
}

[ -n "${USE_UNPUBLISHED_UNICODE:-}" ] && use_unpublished

update "UnicodeData.txt${UNICODE_DATA:+:}${UNICODE_DATA:-}" \
	generated_data.go "${UNICODE_DATA_FILE:-}" \
	rawData rawLineCount
update "Blocks.txt${UNICODE_BLOCKS:+:}${UNICODE_BLOCKS:-}" \
	generated_blocks.go "" \
	rawBlocks rawBlocksLineCount

echo Done
